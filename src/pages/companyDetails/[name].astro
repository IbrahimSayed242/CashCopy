---
import Layout from "../../layouts/Layout.astro"
import BrokerList from "../../components/React/BrokerList.jsx"
import Form from "../../components/vue/Form.vue"
import ScrollToEndButton from "../../components/elements/ScrollButton.astro"

// Type definitions
interface Broker {
  name: string;
  meta_description: string;
  title: string;
}

// src/pages/brokers.astro
import { getBrokers } from "../../utils/StoreData.js"

// Fetch the data
const { data: brokers, error, isLoading } = await getBrokers();
 
const allData = [{...brokers}]

// Canonical URL
const path = Astro.url.href

const {name} = Astro.params;

// let astroData: any[] = [];
// const API_URL = 'https://alltargeting.com/api/method/heero.flagedu.doctype.brokers.brokers.get_brokers';

// // Fetch data before rendering the page
// async function fetchData() {
//   try {
//     const response = await fetch(API_URL, {
//       headers: {
//         'Content-Type': 'application/json',
//         Authorization: 'token a15c6600b1349e5:b43b28c461e8573',
//       },
//     });

//     if (response.ok) {
//       const result = await response.json();
//       astroData = [result.message] || [];
//     } else {
//       return Astro.redirect('/error500');
//     }
//   } catch (error) {
//     console.error('Error fetching data:', error);
//     return Astro.redirect('/error500');
//   }
// }

// await fetchData();

// Find the matching broker
const matchingBroker = allData[0]['Brokers'].find(
  (broker: Broker) => broker.title === name 
);

// If no matching broker is found, redirect to 404
if (!matchingBroker) {
  return Astro.redirect('/404');
}
---

<Layout title={matchingBroker.title || name} path={path} description={matchingBroker.meta_description}>
  <div class="article-1 text-right m-auto container">  
    <BrokerList name={name} brokers = {allData} client:load />
  </div>
  <!-- start section form -->
  <Form client:only="vue" />
  <!-- end section form -->
  <ScrollToEndButton />
</Layout>